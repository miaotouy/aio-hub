/**
 * API 预设数据
 */

import type { ApiPreset } from './types';

export const presets: ApiPreset[] = [
  {
    id: 'openai-chat',
    name: 'OpenAI Chat Completion',
    description: 'OpenAI 和兼容接口（如 DeepSeek、智谱等）的聊天补全 API',
    urlTemplate: '{{protocol}}://{{baseUrl}}/{{apiVersion}}/chat/completions',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    bodyTemplate: JSON.stringify({
      model: '{{model}}',
      messages: [
        {
          role: 'user',
          content: '{{userMessage}}',
        },
      ],
      temperature: '{{temperature}}',
      max_tokens: '{{maxTokens}}',
      stream: '{{stream}}',
    }, null, 2),
    variables: [
      {
        key: 'protocol',
        value: 'https',
        type: 'enum',
        label: '协议',
        options: ['https', 'http'],
        required: true,
        description: '请求协议',
      },
      {
        key: 'baseUrl',
        value: 'api.openai.com',
        type: 'string',
        label: 'Base URL',
        placeholder: '例如: api.openai.com',
        required: true,
        description: 'API 基础 URL',
      },
      {
        key: 'apiVersion',
        value: 'v1',
        type: 'string',
        label: 'API 版本',
        placeholder: '例如: v1',
        required: true,
        description: 'API 版本号',
      },
      {
        key: 'apiKey',
        value: '',
        type: 'string',
        label: 'API Key',
        placeholder: '输入你的 API Key',
        required: true,
        description: '用于授权的 API 密钥',
      },
      {
        key: 'model',
        value: 'gpt-4',
        type: 'enum',
        label: '模型',
        options: [
          'gpt-4',
          'gpt-4-turbo',
          'chatgpt-4o-latest',
          'claude-opus-4-1-20250805',
          'deepseek-chat',
          'glm-4-plus',
        ],
        required: true,
        description: 'LLM 模型名称',
      },
      {
        key: 'userMessage',
        value: 'Hello, how are you?',
        type: 'string',
        label: '用户消息',
        placeholder: '输入要发送的消息',
        required: true,
        description: '发送给 AI 的消息内容',
      },
      {
        key: 'temperature',
        value: '0.7',
        type: 'string',
        label: 'Temperature',
        placeholder: '0.0 - 2.0',
        description: '控制输出的随机性',
      },
      {
        key: 'maxTokens',
        value: '2000',
        type: 'string',
        label: 'Max Tokens',
        placeholder: '最大生成 token 数',
        description: '最大生成的 token 数量',
      },
      {
        key: 'stream',
        value: false,
        type: 'boolean',
        label: '流式输出',
        description: '是否使用流式响应',
      },
    ],
  },
  {
    id: 'gemini-chat',
    name: 'Google Gemini API',
    description: 'Google Gemini 的生成内容 API',
    urlTemplate: '{{protocol}}://{{baseUrl}}/{{apiVersion}}/models/{{model}}:generateContent?key={{apiKey}}',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    bodyTemplate: JSON.stringify({
      contents: [
        {
          parts: [
            {
              text: '{{userMessage}}',
            },
          ],
        },
      ],
      generationConfig: {
        temperature: '{{temperature}}',
        maxOutputTokens: '{{maxTokens}}',
      },
    }, null, 2),
    variables: [
      {
        key: 'protocol',
        value: 'https',
        type: 'enum',
        label: '协议',
        options: ['https', 'http'],
        required: true,
        description: '请求协议',
      },
      {
        key: 'baseUrl',
        value: 'generativelanguage.googleapis.com',
        type: 'string',
        label: 'Base URL',
        placeholder: '例如: generativelanguage.googleapis.com',
        required: true,
        description: 'API 基础 URL',
      },
      {
        key: 'apiVersion',
        value: 'v1beta',
        type: 'string',
        label: 'API 版本',
        placeholder: '例如: v1beta',
        required: true,
        description: 'API 版本号',
      },
      {
        key: 'apiKey',
        value: '',
        type: 'string',
        label: 'API Key',
        placeholder: '输入你的 API Key',
        required: true,
        description: 'Google API 密钥',
      },
      {
        key: 'model',
        value: 'gemini-2.5-pro',
        type: 'enum',
        label: '模型',
        options: [
          'gemini-2.5-pro',
          'gemini-2.5-flash',
          'gemini-2.0-flash',
          'gemini-1.5-pro',
        ],
        required: true,
        description: 'Gemini 模型名称',
      },
      {
        key: 'userMessage',
        value: 'Hello, how are you?',
        type: 'string',
        label: '用户消息',
        placeholder: '输入要发送的消息',
        required: true,
        description: '发送给 AI 的消息内容',
      },
      {
        key: 'temperature',
        value: '0.7',
        type: 'string',
        label: 'Temperature',
        placeholder: '0.0 - 2.0',
        description: '控制输出的随机性',
      },
      {
        key: 'maxTokens',
        value: '2000',
        type: 'string',
        label: 'Max Tokens',
        placeholder: '最大生成 token 数',
        description: '最大生成的 token 数量',
      },
    ],
  },
  {
    id: 'anthropic-chat',
    name: 'Anthropic Claude API',
    description: 'Anthropic Claude 的消息 API',
    urlTemplate: '{{protocol}}://{{baseUrl}}/{{apiVersion}}/messages',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'anthropic-version': '2023-06-01',
    },
    bodyTemplate: JSON.stringify({
      model: '{{model}}',
      messages: [
        {
          role: 'user',
          content: '{{userMessage}}',
        },
      ],
      max_tokens: '{{maxTokens}}',
      temperature: '{{temperature}}',
      stream: '{{stream}}',
    }, null, 2),
    variables: [
      {
        key: 'protocol',
        value: 'https',
        type: 'enum',
        label: '协议',
        options: ['https', 'http'],
        required: true,
        description: '请求协议',
      },
      {
        key: 'baseUrl',
        value: 'api.anthropic.com',
        type: 'string',
        label: 'Base URL',
        placeholder: '例如: api.anthropic.com',
        required: true,
        description: 'API 基础 URL',
      },
      {
        key: 'apiVersion',
        value: 'v1',
        type: 'string',
        label: 'API 版本',
        placeholder: '例如: v1',
        required: true,
        description: 'API 版本号',
      },
      {
        key: 'apiKey',
        value: '',
        type: 'string',
        label: 'API Key',
        placeholder: '输入你的 API Key',
        required: true,
        description: 'Anthropic API 密钥',
      },
      {
        key: 'model',
        value: 'claude-3-5-sonnet-20241022',
        type: 'enum',
        label: '模型',
        options: [
          'claude-3-5-sonnet-20241022',
          'claude-3-5-haiku-20241022',
          'claude-3-opus-20240229',
        ],
        required: true,
        description: 'Claude 模型名称',
      },
      {
        key: 'userMessage',
        value: 'Hello, how are you?',
        type: 'string',
        label: '用户消息',
        placeholder: '输入要发送的消息',
        required: true,
        description: '发送给 AI 的消息内容',
      },
      {
        key: 'temperature',
        value: '0.7',
        type: 'string',
        label: 'Temperature',
        placeholder: '0.0 - 1.0',
        description: '控制输出的随机性',
      },
      {
        key: 'maxTokens',
        value: '2000',
        type: 'string',
        label: 'Max Tokens',
        placeholder: '最大生成 token 数',
        required: true,
        description: '最大生成的 token 数量',
      },
      {
        key: 'stream',
        value: false,
        type: 'boolean',
        label: '流式输出',
        description: '是否使用流式响应',
      },
    ],
  },
];